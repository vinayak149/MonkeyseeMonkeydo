{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinayak.sharma\\\\OneDrive - Incedo Technology Solutions Ltd\\\\Desktop\\\\Project\\\\src\\\\components\\\\AssignIdeaForm.js\",\n  _s = $RefreshSig$();\n// AssignIdeaForm.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssignIdeaForm = ({\n  ideas,\n  panelists,\n  onAssignIdea\n}) => {\n  _s();\n  const [selectedIdea, setSelectedIdea] = useState('');\n  const [selectedPanelist, setSelectedPanelist] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    onAssignIdea(selectedIdea, selectedPanelist);\n    // Reset form (optional)\n    setSelectedIdea('');\n    setSelectedPanelist('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ideaSelect\",\n        children: \"Select Idea:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"ideaSelect\",\n        value: selectedIdea,\n        onChange: e => setSelectedIdea(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Please choose an idea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), ideas.map(idea => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: idea.id,\n          children: idea.title\n        }, idea.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"panelistSelect\",\n        children: \"Assign to Panelist:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"panelistSelect\",\n        value: selectedPanelist,\n        onChange: e => setSelectedPanelist(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Please choose a panelist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), panelists.map(panelist => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: panelist.id,\n          children: panelist.name\n        }, panelist.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Assign Idea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignIdeaForm, \"QD+vkpJTQTRenwEqjdnyR2xtUvE=\");\n_c = AssignIdeaForm;\nexport default AssignIdeaForm;\nvar _c;\n$RefreshReg$(_c, \"AssignIdeaForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AssignIdeaForm","ideas","panelists","onAssignIdea","_s","selectedIdea","setSelectedIdea","selectedPanelist","setSelectedPanelist","handleSubmit","event","preventDefault","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","target","required","map","idea","title","panelist","name","type","_c","$RefreshReg$"],"sources":["C:/Users/vinayak.sharma/OneDrive - Incedo Technology Solutions Ltd/Desktop/Project/src/components/AssignIdeaForm.js"],"sourcesContent":["// AssignIdeaForm.js\r\nimport React, { useState } from 'react';\r\n\r\nconst AssignIdeaForm = ({ ideas, panelists, onAssignIdea }) => {\r\n  const [selectedIdea, setSelectedIdea] = useState('');\r\n  const [selectedPanelist, setSelectedPanelist] = useState('');\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    onAssignIdea(selectedIdea, selectedPanelist);\r\n    // Reset form (optional)\r\n    setSelectedIdea('');\r\n    setSelectedPanelist('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"ideaSelect\">Select Idea:</label>\r\n        <select\r\n          id=\"ideaSelect\"\r\n          value={selectedIdea}\r\n          onChange={(e) => setSelectedIdea(e.target.value)}\r\n          required\r\n        >\r\n          <option value=\"\">Please choose an idea</option>\r\n          {ideas.map((idea) => (\r\n            <option key={idea.id} value={idea.id}>{idea.title}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"panelistSelect\">Assign to Panelist:</label>\r\n        <select\r\n          id=\"panelistSelect\"\r\n          value={selectedPanelist}\r\n          onChange={(e) => setSelectedPanelist(e.target.value)}\r\n          required\r\n        >\r\n          <option value=\"\">Please choose a panelist</option>\r\n          {panelists.map((panelist) => (\r\n            <option key={panelist.id} value={panelist.id}>{panelist.name}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <button type=\"submit\">Assign Idea</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AssignIdeaForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}