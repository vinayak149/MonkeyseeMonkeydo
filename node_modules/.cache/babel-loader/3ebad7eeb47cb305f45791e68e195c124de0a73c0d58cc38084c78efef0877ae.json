{"ast":null,"code":"import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n  constructor() {\n    this.key = \"rgb\";\n    this.stringPrefix = \"rgb\";\n  }\n  handleColor(color) {\n    const colorValue = color.value,\n      rgbColor = colorValue.rgb ?? color.value;\n    if (rgbColor.r !== undefined) {\n      return rgbColor;\n    }\n  }\n  handleRangeColor(color) {\n    const colorValue = color.value,\n      rgbColor = colorValue.rgb ?? color.value;\n    if (rgbColor.r !== undefined) {\n      return {\n        r: getRangeValue(rgbColor.r),\n        g: getRangeValue(rgbColor.g),\n        b: getRangeValue(rgbColor.b)\n      };\n    }\n  }\n  parseString(input) {\n    if (!input.startsWith(this.stringPrefix)) {\n      return;\n    }\n    const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i,\n      result = regex.exec(input);\n    return result ? {\n      a: result.length > 4 ? parseAlpha(result[5]) : 1,\n      b: parseInt(result[3], 10),\n      g: parseInt(result[2], 10),\n      r: parseInt(result[1], 10)\n    } : undefined;\n  }\n}","map":{"version":3,"names":["getRangeValue","parseAlpha","RgbColorManager","constructor","key","stringPrefix","handleColor","color","colorValue","value","rgbColor","rgb","r","undefined","handleRangeColor","g","b","parseString","input","startsWith","regex","result","exec","a","length","parseInt"],"sources":["C:/Users/vinayak.sharma/OneDrive - Incedo Technology Solutions Ltd/Desktop/Project/node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js"],"sourcesContent":["import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,eAAe;AACzD,OAAO,MAAMC,eAAe,CAAC;EACzBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,GAAG,GAAG,KAAK;IAChB,IAAI,CAACC,YAAY,GAAG,KAAK;EAC7B;EACAC,WAAWA,CAACC,KAAK,EAAE;IACf,MAAMC,UAAU,GAAGD,KAAK,CAACE,KAAK;MAAEC,QAAQ,GAAGF,UAAU,CAACG,GAAG,IAAIJ,KAAK,CAACE,KAAK;IACxE,IAAIC,QAAQ,CAACE,CAAC,KAAKC,SAAS,EAAE;MAC1B,OAAOH,QAAQ;IACnB;EACJ;EACAI,gBAAgBA,CAACP,KAAK,EAAE;IACpB,MAAMC,UAAU,GAAGD,KAAK,CAACE,KAAK;MAAEC,QAAQ,GAAGF,UAAU,CAACG,GAAG,IAAIJ,KAAK,CAACE,KAAK;IACxE,IAAIC,QAAQ,CAACE,CAAC,KAAKC,SAAS,EAAE;MAC1B,OAAO;QACHD,CAAC,EAAEZ,aAAa,CAACU,QAAQ,CAACE,CAAC,CAAC;QAC5BG,CAAC,EAAEf,aAAa,CAACU,QAAQ,CAACK,CAAC,CAAC;QAC5BC,CAAC,EAAEhB,aAAa,CAACU,QAAQ,CAACM,CAAC;MAC/B,CAAC;IACL;EACJ;EACAC,WAAWA,CAACC,KAAK,EAAE;IACf,IAAI,CAACA,KAAK,CAACC,UAAU,CAAC,IAAI,CAACd,YAAY,CAAC,EAAE;MACtC;IACJ;IACA,MAAMe,KAAK,GAAG,kEAAkE;MAAEC,MAAM,GAAGD,KAAK,CAACE,IAAI,CAACJ,KAAK,CAAC;IAC5G,OAAOG,MAAM,GACP;MACEE,CAAC,EAAEF,MAAM,CAACG,MAAM,GAAG,CAAC,GAAGvB,UAAU,CAACoB,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;MAChDL,CAAC,EAAES,QAAQ,CAACJ,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MAC1BN,CAAC,EAAEU,QAAQ,CAACJ,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MAC1BT,CAAC,EAAEa,QAAQ,CAACJ,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;IAC7B,CAAC,GACCR,SAAS;EACnB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}