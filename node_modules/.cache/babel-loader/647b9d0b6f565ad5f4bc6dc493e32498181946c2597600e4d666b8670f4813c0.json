{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinayak.sharma\\\\OneDrive - Incedo Technology Solutions Ltd\\\\Desktop\\\\Project\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AddPanelistForm from './AddPanelistForm';\nimport AssignIdeaForm from './AssignIdeaForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [panelists, setPanelists] = useState([]);\n  const [ideas, setIdeas] = useState([]);\n\n  // Example function to add a panelist\n  const handleAddPanelist = panelistName => {\n    const newPanelist = {\n      id: panelists.length + 1,\n      name: panelistName\n    };\n    setPanelists([...panelists, newPanelist]);\n    // Here, also update your backend or state management system\n  };\n\n  // Example function to assign an idea to a panelist\n  const handleAssignIdea = (ideaId, panelistId) => {\n    // Logic to assign the idea to the panelist\n    console.log(`Assigning idea ${ideaId} to panelist ${panelistId}`);\n    // Update this assignment in your backend or state management system\n  };\n\n  // Fetch initial lists of ideas and panelists from your backend or state management system\n  useEffect(() => {\n    // Placeholder for fetch logic\n    const fetchedIdeas = [\n    // Example ideas\n    {\n      id: '1',\n      title: 'Idea 1'\n    }, {\n      id: '2',\n      title: 'Idea 2'\n    }];\n    const fetchedPanelists = [\n    // Example panelists\n    {\n      id: '1',\n      name: 'Panelist 1'\n    }, {\n      id: '2',\n      name: 'Panelist 2'\n    }];\n    setIdeas(fetchedIdeas);\n    setPanelists(fetchedPanelists);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPanelistForm, {\n      onAddPanelist: handleAddPanelist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AssignIdeaForm, {\n      ideas: ideas,\n      panelists: panelists,\n      onAssignIdea: handleAssignIdea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"C77TLcogVdaTa5cd02jLb0fClmo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","AddPanelistForm","AssignIdeaForm","jsxDEV","_jsxDEV","Dashboard","_s","panelists","setPanelists","ideas","setIdeas","handleAddPanelist","panelistName","newPanelist","id","length","name","handleAssignIdea","ideaId","panelistId","console","log","fetchedIdeas","title","fetchedPanelists","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddPanelist","onAssignIdea","_c","$RefreshReg$"],"sources":["C:/Users/vinayak.sharma/OneDrive - Incedo Technology Solutions Ltd/Desktop/Project/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AddPanelistForm from './AddPanelistForm';\r\nimport AssignIdeaForm from './AssignIdeaForm';\r\n\r\nconst Dashboard = () => {\r\n  const [panelists, setPanelists] = useState([]);\r\n  const [ideas, setIdeas] = useState([]);\r\n\r\n  // Example function to add a panelist\r\n  const handleAddPanelist = (panelistName) => {\r\n    const newPanelist = { id: panelists.length + 1, name: panelistName };\r\n    setPanelists([...panelists, newPanelist]);\r\n    // Here, also update your backend or state management system\r\n  };\r\n\r\n  // Example function to assign an idea to a panelist\r\n  const handleAssignIdea = (ideaId, panelistId) => {\r\n    // Logic to assign the idea to the panelist\r\n    console.log(`Assigning idea ${ideaId} to panelist ${panelistId}`);\r\n    // Update this assignment in your backend or state management system\r\n  };\r\n\r\n  // Fetch initial lists of ideas and panelists from your backend or state management system\r\n  useEffect(() => {\r\n    // Placeholder for fetch logic\r\n    const fetchedIdeas = [\r\n      // Example ideas\r\n      { id: '1', title: 'Idea 1' },\r\n      { id: '2', title: 'Idea 2' }\r\n    ];\r\n    const fetchedPanelists = [\r\n      // Example panelists\r\n      { id: '1', name: 'Panelist 1' },\r\n      { id: '2', name: 'Panelist 2' }\r\n    ];\r\n    setIdeas(fetchedIdeas);\r\n    setPanelists(fetchedPanelists);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Dashboard</h2>\r\n      <AddPanelistForm onAddPanelist={handleAddPanelist} />\r\n      <AssignIdeaForm ideas={ideas} panelists={panelists} onAssignIdea={handleAssignIdea} />\r\n      {/* Include additional dashboard functionalities as needed */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMY,iBAAiB,GAAIC,YAAY,IAAK;IAC1C,MAAMC,WAAW,GAAG;MAAEC,EAAE,EAAEP,SAAS,CAACQ,MAAM,GAAG,CAAC;MAAEC,IAAI,EAAEJ;IAAa,CAAC;IACpEJ,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEM,WAAW,CAAC,CAAC;IACzC;EACF,CAAC;;EAED;EACA,MAAMI,gBAAgB,GAAGA,CAACC,MAAM,EAAEC,UAAU,KAAK;IAC/C;IACAC,OAAO,CAACC,GAAG,CAAE,kBAAiBH,MAAO,gBAAeC,UAAW,EAAC,CAAC;IACjE;EACF,CAAC;;EAED;EACAnB,SAAS,CAAC,MAAM;IACd;IACA,MAAMsB,YAAY,GAAG;IACnB;IACA;MAAER,EAAE,EAAE,GAAG;MAAES,KAAK,EAAE;IAAS,CAAC,EAC5B;MAAET,EAAE,EAAE,GAAG;MAAES,KAAK,EAAE;IAAS,CAAC,CAC7B;IACD,MAAMC,gBAAgB,GAAG;IACvB;IACA;MAAEV,EAAE,EAAE,GAAG;MAAEE,IAAI,EAAE;IAAa,CAAC,EAC/B;MAAEF,EAAE,EAAE,GAAG;MAAEE,IAAI,EAAE;IAAa,CAAC,CAChC;IACDN,QAAQ,CAACY,YAAY,CAAC;IACtBd,YAAY,CAACgB,gBAAgB,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBzB,OAAA,CAACH,eAAe;MAAC6B,aAAa,EAAEnB;IAAkB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrDzB,OAAA,CAACF,cAAc;MAACO,KAAK,EAAEA,KAAM;MAACF,SAAS,EAAEA,SAAU;MAACwB,YAAY,EAAEd;IAAiB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnF,CAAC;AAEV,CAAC;AAACvB,EAAA,CA3CID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AA6Cf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}