{"ast":null,"code":"import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n  constructor() {\n    this.angle = new MoveAngle();\n    this.attract = new MoveAttract();\n    this.center = new MoveCenter();\n    this.decay = 0;\n    this.distance = {};\n    this.direction = \"none\";\n    this.drift = 0;\n    this.enable = false;\n    this.gravity = new MoveGravity();\n    this.path = new MovePath();\n    this.outModes = new OutModes();\n    this.random = false;\n    this.size = false;\n    this.speed = 2;\n    this.spin = new Spin();\n    this.straight = false;\n    this.trail = new MoveTrail();\n    this.vibrate = false;\n    this.warp = false;\n  }\n  get bounce() {\n    return this.collisions;\n  }\n  set bounce(value) {\n    this.collisions = value;\n  }\n  get collisions() {\n    return false;\n  }\n  set collisions(_) {}\n  get noise() {\n    return this.path;\n  }\n  set noise(value) {\n    this.path = value;\n  }\n  get outMode() {\n    return this.outModes.default;\n  }\n  set outMode(value) {\n    this.outModes.default = value;\n  }\n  get out_mode() {\n    return this.outMode;\n  }\n  set out_mode(value) {\n    this.outMode = value;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    this.angle.load(isNumber(data.angle) ? {\n      value: data.angle\n    } : data.angle);\n    this.attract.load(data.attract);\n    this.center.load(data.center);\n    if (data.decay !== undefined) {\n      this.decay = setRangeValue(data.decay);\n    }\n    if (data.direction !== undefined) {\n      this.direction = data.direction;\n    }\n    if (data.distance !== undefined) {\n      this.distance = isNumber(data.distance) ? {\n        horizontal: data.distance,\n        vertical: data.distance\n      } : {\n        ...data.distance\n      };\n    }\n    if (data.drift !== undefined) {\n      this.drift = setRangeValue(data.drift);\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    this.gravity.load(data.gravity);\n    const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n    if (outModes !== undefined) {\n      if (isObject(outModes)) {\n        this.outModes.load(outModes);\n      } else {\n        this.outModes.load({\n          default: outModes\n        });\n      }\n    }\n    this.path.load(data.path ?? data.noise);\n    if (data.random !== undefined) {\n      this.random = data.random;\n    }\n    if (data.size !== undefined) {\n      this.size = data.size;\n    }\n    if (data.speed !== undefined) {\n      this.speed = setRangeValue(data.speed);\n    }\n    this.spin.load(data.spin);\n    if (data.straight !== undefined) {\n      this.straight = data.straight;\n    }\n    this.trail.load(data.trail);\n    if (data.vibrate !== undefined) {\n      this.vibrate = data.vibrate;\n    }\n    if (data.warp !== undefined) {\n      this.warp = data.warp;\n    }\n  }\n}","map":{"version":3,"names":["isNumber","isObject","MoveAngle","MoveAttract","MoveCenter","MoveGravity","MovePath","MoveTrail","OutModes","Spin","setRangeValue","Move","constructor","angle","attract","center","decay","distance","direction","drift","enable","gravity","path","outModes","random","size","speed","spin","straight","trail","vibrate","warp","bounce","collisions","value","_","noise","outMode","default","out_mode","load","data","undefined","horizontal","vertical"],"sources":["C:/Users/vinayak.sharma/OneDrive - Incedo Technology Solutions Ltd/Desktop/Project/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js"],"sourcesContent":["import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,yBAAyB;AAC5D,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,aAAa,QAAQ,+BAA+B;AAC7D,OAAO,MAAMC,IAAI,CAAC;EACdC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,KAAK,GAAG,IAAIX,SAAS,CAAC,CAAC;IAC5B,IAAI,CAACY,OAAO,GAAG,IAAIX,WAAW,CAAC,CAAC;IAChC,IAAI,CAACY,MAAM,GAAG,IAAIX,UAAU,CAAC,CAAC;IAC9B,IAAI,CAACY,KAAK,GAAG,CAAC;IACd,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAACC,SAAS,GAAG,MAAM;IACvB,IAAI,CAACC,KAAK,GAAG,CAAC;IACd,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB,IAAI,CAACC,OAAO,GAAG,IAAIhB,WAAW,CAAC,CAAC;IAChC,IAAI,CAACiB,IAAI,GAAG,IAAIhB,QAAQ,CAAC,CAAC;IAC1B,IAAI,CAACiB,QAAQ,GAAG,IAAIf,QAAQ,CAAC,CAAC;IAC9B,IAAI,CAACgB,MAAM,GAAG,KAAK;IACnB,IAAI,CAACC,IAAI,GAAG,KAAK;IACjB,IAAI,CAACC,KAAK,GAAG,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,IAAIlB,IAAI,CAAC,CAAC;IACtB,IAAI,CAACmB,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,KAAK,GAAG,IAAItB,SAAS,CAAC,CAAC;IAC5B,IAAI,CAACuB,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,IAAI,GAAG,KAAK;EACrB;EACA,IAAIC,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAACC,UAAU;EAC1B;EACA,IAAID,MAAMA,CAACE,KAAK,EAAE;IACd,IAAI,CAACD,UAAU,GAAGC,KAAK;EAC3B;EACA,IAAID,UAAUA,CAAA,EAAG;IACb,OAAO,KAAK;EAChB;EACA,IAAIA,UAAUA,CAACE,CAAC,EAAE,CAClB;EACA,IAAIC,KAAKA,CAAA,EAAG;IACR,OAAO,IAAI,CAACd,IAAI;EACpB;EACA,IAAIc,KAAKA,CAACF,KAAK,EAAE;IACb,IAAI,CAACZ,IAAI,GAAGY,KAAK;EACrB;EACA,IAAIG,OAAOA,CAAA,EAAG;IACV,OAAO,IAAI,CAACd,QAAQ,CAACe,OAAO;EAChC;EACA,IAAID,OAAOA,CAACH,KAAK,EAAE;IACf,IAAI,CAACX,QAAQ,CAACe,OAAO,GAAGJ,KAAK;EACjC;EACA,IAAIK,QAAQA,CAAA,EAAG;IACX,OAAO,IAAI,CAACF,OAAO;EACvB;EACA,IAAIE,QAAQA,CAACL,KAAK,EAAE;IAChB,IAAI,CAACG,OAAO,GAAGH,KAAK;EACxB;EACAM,IAAIA,CAACC,IAAI,EAAE;IACP,IAAI,CAACA,IAAI,EAAE;MACP;IACJ;IACA,IAAI,CAAC5B,KAAK,CAAC2B,IAAI,CAACxC,QAAQ,CAACyC,IAAI,CAAC5B,KAAK,CAAC,GAAG;MAAEqB,KAAK,EAAEO,IAAI,CAAC5B;IAAM,CAAC,GAAG4B,IAAI,CAAC5B,KAAK,CAAC;IAC1E,IAAI,CAACC,OAAO,CAAC0B,IAAI,CAACC,IAAI,CAAC3B,OAAO,CAAC;IAC/B,IAAI,CAACC,MAAM,CAACyB,IAAI,CAACC,IAAI,CAAC1B,MAAM,CAAC;IAC7B,IAAI0B,IAAI,CAACzB,KAAK,KAAK0B,SAAS,EAAE;MAC1B,IAAI,CAAC1B,KAAK,GAAGN,aAAa,CAAC+B,IAAI,CAACzB,KAAK,CAAC;IAC1C;IACA,IAAIyB,IAAI,CAACvB,SAAS,KAAKwB,SAAS,EAAE;MAC9B,IAAI,CAACxB,SAAS,GAAGuB,IAAI,CAACvB,SAAS;IACnC;IACA,IAAIuB,IAAI,CAACxB,QAAQ,KAAKyB,SAAS,EAAE;MAC7B,IAAI,CAACzB,QAAQ,GAAGjB,QAAQ,CAACyC,IAAI,CAACxB,QAAQ,CAAC,GACjC;QACE0B,UAAU,EAAEF,IAAI,CAACxB,QAAQ;QACzB2B,QAAQ,EAAEH,IAAI,CAACxB;MACnB,CAAC,GACC;QAAE,GAAGwB,IAAI,CAACxB;MAAS,CAAC;IAC9B;IACA,IAAIwB,IAAI,CAACtB,KAAK,KAAKuB,SAAS,EAAE;MAC1B,IAAI,CAACvB,KAAK,GAAGT,aAAa,CAAC+B,IAAI,CAACtB,KAAK,CAAC;IAC1C;IACA,IAAIsB,IAAI,CAACrB,MAAM,KAAKsB,SAAS,EAAE;MAC3B,IAAI,CAACtB,MAAM,GAAGqB,IAAI,CAACrB,MAAM;IAC7B;IACA,IAAI,CAACC,OAAO,CAACmB,IAAI,CAACC,IAAI,CAACpB,OAAO,CAAC;IAC/B,MAAME,QAAQ,GAAGkB,IAAI,CAAClB,QAAQ,IAAIkB,IAAI,CAACJ,OAAO,IAAII,IAAI,CAACF,QAAQ;IAC/D,IAAIhB,QAAQ,KAAKmB,SAAS,EAAE;MACxB,IAAIzC,QAAQ,CAACsB,QAAQ,CAAC,EAAE;QACpB,IAAI,CAACA,QAAQ,CAACiB,IAAI,CAACjB,QAAQ,CAAC;MAChC,CAAC,MACI;QACD,IAAI,CAACA,QAAQ,CAACiB,IAAI,CAAC;UACfF,OAAO,EAAEf;QACb,CAAC,CAAC;MACN;IACJ;IACA,IAAI,CAACD,IAAI,CAACkB,IAAI,CAACC,IAAI,CAACnB,IAAI,IAAImB,IAAI,CAACL,KAAK,CAAC;IACvC,IAAIK,IAAI,CAACjB,MAAM,KAAKkB,SAAS,EAAE;MAC3B,IAAI,CAAClB,MAAM,GAAGiB,IAAI,CAACjB,MAAM;IAC7B;IACA,IAAIiB,IAAI,CAAChB,IAAI,KAAKiB,SAAS,EAAE;MACzB,IAAI,CAACjB,IAAI,GAAGgB,IAAI,CAAChB,IAAI;IACzB;IACA,IAAIgB,IAAI,CAACf,KAAK,KAAKgB,SAAS,EAAE;MAC1B,IAAI,CAAChB,KAAK,GAAGhB,aAAa,CAAC+B,IAAI,CAACf,KAAK,CAAC;IAC1C;IACA,IAAI,CAACC,IAAI,CAACa,IAAI,CAACC,IAAI,CAACd,IAAI,CAAC;IACzB,IAAIc,IAAI,CAACb,QAAQ,KAAKc,SAAS,EAAE;MAC7B,IAAI,CAACd,QAAQ,GAAGa,IAAI,CAACb,QAAQ;IACjC;IACA,IAAI,CAACC,KAAK,CAACW,IAAI,CAACC,IAAI,CAACZ,KAAK,CAAC;IAC3B,IAAIY,IAAI,CAACX,OAAO,KAAKY,SAAS,EAAE;MAC5B,IAAI,CAACZ,OAAO,GAAGW,IAAI,CAACX,OAAO;IAC/B;IACA,IAAIW,IAAI,CAACV,IAAI,KAAKW,SAAS,EAAE;MACzB,IAAI,CAACX,IAAI,GAAGU,IAAI,CAACV,IAAI;IACzB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}