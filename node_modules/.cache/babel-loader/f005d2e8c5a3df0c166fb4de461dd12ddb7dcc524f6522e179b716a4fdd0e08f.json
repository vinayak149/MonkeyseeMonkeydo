{"ast":null,"code":"import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n  context.beginPath();\n  context.moveTo(begin.x, begin.y);\n  context.lineTo(end.x, end.y);\n  context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n  context.beginPath();\n  context.moveTo(p1.x, p1.y);\n  context.lineTo(p2.x, p2.y);\n  context.lineTo(p3.x, p3.y);\n  context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n  context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n  context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n  if (!image) {\n    return;\n  }\n  context.globalAlpha = opacity;\n  context.drawImage(image, 0, 0, dimension.width, dimension.height);\n  context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n  context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n  const {\n    container,\n    context,\n    particle,\n    delta,\n    colorStyles,\n    backgroundMask,\n    composite,\n    radius,\n    opacity,\n    shadow,\n    transform\n  } = data;\n  const pos = particle.getPosition(),\n    angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0),\n    rotateData = {\n      sin: Math.sin(angle),\n      cos: Math.cos(angle)\n    },\n    transformData = {\n      a: rotateData.cos * (transform.a ?? 1),\n      b: rotateData.sin * (transform.b ?? 1),\n      c: -rotateData.sin * (transform.c ?? 1),\n      d: rotateData.cos * (transform.d ?? 1)\n    };\n  context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n  context.beginPath();\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n  const shadowColor = particle.shadowColor;\n  if (shadow.enable && shadowColor) {\n    context.shadowBlur = shadow.blur;\n    context.shadowColor = getStyleFromRgb(shadowColor);\n    context.shadowOffsetX = shadow.offset.x;\n    context.shadowOffsetY = shadow.offset.y;\n  }\n  if (colorStyles.fill) {\n    context.fillStyle = colorStyles.fill;\n  }\n  const strokeWidth = particle.strokeWidth ?? 0;\n  context.lineWidth = strokeWidth;\n  if (colorStyles.stroke) {\n    context.strokeStyle = colorStyles.stroke;\n  }\n  drawShape(container, context, particle, radius, opacity, delta);\n  if (strokeWidth > 0) {\n    context.stroke();\n  }\n  if (particle.close) {\n    context.closePath();\n  }\n  if (particle.fill) {\n    context.fill();\n  }\n  drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n  context.globalCompositeOperation = \"source-over\";\n  context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n  if (!particle.shape) {\n    return;\n  }\n  const drawer = container.drawers.get(particle.shape);\n  if (!drawer) {\n    return;\n  }\n  drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n  if (!particle.shape) {\n    return;\n  }\n  const drawer = container.drawers.get(particle.shape);\n  if (!drawer || !drawer.afterEffect) {\n    return;\n  }\n  drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n  if (!plugin.draw) {\n    return;\n  }\n  plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n  if (!plugin.drawParticle) {\n    return;\n  }\n  plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n  return {\n    h: color.h,\n    s: color.s,\n    l: color.l + (type === \"darken\" ? -1 : 1) * value\n  };\n}","map":{"version":3,"names":["getStyleFromRgb","drawLine","context","begin","end","beginPath","moveTo","x","y","lineTo","closePath","drawTriangle","p1","p2","p3","paintBase","dimension","baseColor","fillStyle","fillRect","width","height","paintImage","image","opacity","globalAlpha","drawImage","clear","clearRect","drawParticle","data","container","particle","delta","colorStyles","backgroundMask","composite","radius","shadow","transform","pos","getPosition","angle","rotation","pathRotation","velocity","rotateData","sin","Math","cos","transformData","a","b","c","d","setTransform","globalCompositeOperation","shadowColor","enable","shadowBlur","blur","shadowOffsetX","offset","shadowOffsetY","fill","strokeWidth","lineWidth","stroke","strokeStyle","drawShape","close","drawShapeAfterEffect","shape","drawer","drawers","get","draw","retina","pixelRatio","afterEffect","drawPlugin","plugin","drawParticlePlugin","alterHsl","color","type","value","h","s","l"],"sources":["C:/Users/vinayak.sharma/OneDrive - Incedo Technology Solutions Ltd/Desktop/Project/node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js"],"sourcesContent":["import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}