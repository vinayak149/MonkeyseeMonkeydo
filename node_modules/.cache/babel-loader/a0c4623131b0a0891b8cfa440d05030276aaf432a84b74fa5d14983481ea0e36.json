{"ast":null,"code":"import { randomInRange } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n  if (!colorValue || !valueAnimation.enable || (colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0)) {\n    return;\n  }\n  if (!colorValue.time) {\n    colorValue.time = 0;\n  }\n  if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n    colorValue.time += delta.value;\n  }\n  if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n    return;\n  }\n  const offset = randomInRange(valueAnimation.offset),\n    velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6,\n    decay = colorValue.decay ?? 1;\n  if (!decrease || colorValue.status === \"increasing\") {\n    colorValue.value += velocity;\n    if (colorValue.value > max) {\n      if (!colorValue.loops) {\n        colorValue.loops = 0;\n      }\n      colorValue.loops++;\n      if (decrease) {\n        colorValue.status = \"decreasing\";\n        colorValue.value -= colorValue.value % max;\n      }\n    }\n  } else {\n    colorValue.value -= velocity;\n    if (colorValue.value < 0) {\n      if (!colorValue.loops) {\n        colorValue.loops = 0;\n      }\n      colorValue.loops++;\n      colorValue.status = \"increasing\";\n      colorValue.value += colorValue.value;\n    }\n  }\n  if (colorValue.velocity && decay !== 1) {\n    colorValue.velocity *= decay;\n  }\n  if (colorValue.value > max) {\n    colorValue.value %= max;\n  }\n}\nexport function updateColor(particle, delta) {\n  const {\n      h: hAnimation,\n      s: sAnimation,\n      l: lAnimation\n    } = particle.options.color.animation,\n    {\n      color\n    } = particle;\n  if (!color) {\n    return;\n  }\n  const {\n    h,\n    s,\n    l\n  } = color;\n  if (h) {\n    updateColorValue(delta, h, hAnimation, 360, false);\n  }\n  if (s) {\n    updateColorValue(delta, s, sAnimation, 100, true);\n  }\n  if (l) {\n    updateColorValue(delta, l, lAnimation, 100, true);\n  }\n}","map":{"version":3,"names":["randomInRange","updateColorValue","delta","colorValue","valueAnimation","max","decrease","enable","maxLoops","loops","time","delayTime","value","offset","velocity","factor","decay","status","updateColor","particle","h","hAnimation","s","sAnimation","l","lAnimation","options","color","animation"],"sources":["C:/Users/vinayak.sharma/OneDrive - Incedo Technology Solutions Ltd/Desktop/Project/node_modules/tsparticles-updater-color/esm/Utils.js"],"sourcesContent":["import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateColor(particle, delta) {\n    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}