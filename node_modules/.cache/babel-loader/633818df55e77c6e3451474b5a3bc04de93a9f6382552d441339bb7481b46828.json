{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinayak.sharma\\\\OneDrive - Incedo Technology Solutions Ltd\\\\Desktop\\\\Project\\\\src\\\\components\\\\AssignIdeaForm.js\",\n  _s = $RefreshSig$();\n// AssignIdeaForm.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AssignIdeaForm() {\n  _s();\n  const [ideaAssignment, setIdeaAssignment] = useState({\n    ideaId: '',\n    panelistId: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setIdeaAssignment({\n      ...ideaAssignment,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Here you would typically send the assignment data to your backend for processing\n    console.log(\"Idea assigned:\", ideaAssignment);\n    alert(\"Idea assigned successfully!\");\n    // Implement the API call to save the assignment using fetch or axios\n    // Reset form fields after submission\n    setIdeaAssignment({\n      ideaId: '',\n      panelistId: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assign-idea-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Assign Idea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Idea ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"ideaId\",\n          value: ideaAssignment.ideaId,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Panelist ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"panelistId\",\n          value: ideaAssignment.panelistId,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Assign Idea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(AssignIdeaForm, \"YuyI2Y3TGuJf+V8Za2XXFtQKXFE=\");\n_c = AssignIdeaForm;\nexport default AssignIdeaForm;\nvar _c;\n$RefreshReg$(_c, \"AssignIdeaForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AssignIdeaForm","_s","ideaAssignment","setIdeaAssignment","ideaId","panelistId","handleChange","e","name","value","target","handleSubmit","preventDefault","console","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/vinayak.sharma/OneDrive - Incedo Technology Solutions Ltd/Desktop/Project/src/components/AssignIdeaForm.js"],"sourcesContent":["// AssignIdeaForm.js\r\nimport React, { useState } from 'react';\r\n\r\nfunction AssignIdeaForm() {\r\n  const [ideaAssignment, setIdeaAssignment] = useState({\r\n    ideaId: '',\r\n    panelistId: ''\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setIdeaAssignment({ ...ideaAssignment, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Here you would typically send the assignment data to your backend for processing\r\n    console.log(\"Idea assigned:\", ideaAssignment);\r\n    alert(\"Idea assigned successfully!\");\r\n    // Implement the API call to save the assignment using fetch or axios\r\n    // Reset form fields after submission\r\n    setIdeaAssignment({\r\n      ideaId: '',\r\n      panelistId: ''\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"assign-idea-form\">\r\n      <h2>Assign Idea</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Idea ID:</label>\r\n          <input type=\"text\" name=\"ideaId\" value={ideaAssignment.ideaId} onChange={handleChange} required />\r\n        </div>\r\n        <div>\r\n          <label>Panelist ID:</label>\r\n          <input type=\"text\" name=\"panelistId\" value={ideaAssignment.panelistId} onChange={handleChange} required />\r\n        </div>\r\n        <button type=\"submit\">Assign Idea</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssignIdeaForm;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC;IACnDO,MAAM,EAAE,EAAE;IACVC,UAAU,EAAE;EACd,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCP,iBAAiB,CAAC;MAAE,GAAGD,cAAc;MAAE,CAACM,IAAI,GAAGC;IAAM,CAAC,CAAC;EACzD,CAAC;EAED,MAAME,YAAY,GAAIJ,CAAC,IAAK;IAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB;IACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEZ,cAAc,CAAC;IAC7Ca,KAAK,CAAC,6BAA6B,CAAC;IACpC;IACA;IACAZ,iBAAiB,CAAC;MAChBC,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE;IACd,CAAC,CAAC;EACJ,CAAC;EAED,oBACEN,OAAA;IAAKiB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BlB,OAAA;MAAAkB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBtB,OAAA;MAAMuB,QAAQ,EAAEX,YAAa;MAAAM,QAAA,gBAC3BlB,OAAA;QAAAkB,QAAA,gBACElB,OAAA;UAAAkB,QAAA,EAAO;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvBtB,OAAA;UAAOwB,IAAI,EAAC,MAAM;UAACf,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAEP,cAAc,CAACE,MAAO;UAACoB,QAAQ,EAAElB,YAAa;UAACmB,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/F,CAAC,eACNtB,OAAA;QAAAkB,QAAA,gBACElB,OAAA;UAAAkB,QAAA,EAAO;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3BtB,OAAA;UAAOwB,IAAI,EAAC,MAAM;UAACf,IAAI,EAAC,YAAY;UAACC,KAAK,EAAEP,cAAc,CAACG,UAAW;UAACmB,QAAQ,EAAElB,YAAa;UAACmB,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvG,CAAC,eACNtB,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACpB,EAAA,CAxCQD,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AA0CvB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}