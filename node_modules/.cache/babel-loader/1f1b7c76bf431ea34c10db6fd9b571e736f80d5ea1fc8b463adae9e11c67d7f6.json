{"ast":null,"code":"import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n  return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n  return {\n    value,\n    factor: smooth ? 60 / fpsLimit : 60 * value / 1000\n  };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n  const options = new Options(engine, container);\n  loadOptions(options, ...sourceOptionsArr);\n  return options;\n}\nconst defaultPathGeneratorKey = \"default\",\n  defaultPathGenerator = {\n    generate: p => p.velocity,\n    init: () => {},\n    update: () => {},\n    reset: () => {}\n  };\nexport class Container {\n  constructor(engine, id, sourceOptions) {\n    this.id = id;\n    this._intersectionManager = entries => {\n      if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n        return;\n      }\n      for (const entry of entries) {\n        if (entry.target !== this.interactivity.element) {\n          continue;\n        }\n        (entry.isIntersecting ? this.play : this.pause)();\n      }\n    };\n    this._nextFrame = async timestamp => {\n      try {\n        if (!this.smooth && this.lastFrameTime !== undefined && timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n          this.draw(false);\n          return;\n        }\n        this.lastFrameTime ??= timestamp;\n        const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n        this.addLifeTime(delta.value);\n        this.lastFrameTime = timestamp;\n        if (delta.value > 1000) {\n          this.draw(false);\n          return;\n        }\n        await this.particles.draw(delta);\n        if (!this.alive()) {\n          this.destroy();\n          return;\n        }\n        if (this.getAnimationStatus()) {\n          this.draw(false);\n        }\n      } catch (e) {\n        getLogger().error(`${errorPrefix} in animation loop`, e);\n      }\n    };\n    this._engine = engine;\n    this.fpsLimit = 120;\n    this.smooth = false;\n    this._delay = 0;\n    this._duration = 0;\n    this._lifeTime = 0;\n    this._firstStart = true;\n    this.started = false;\n    this.destroyed = false;\n    this._paused = true;\n    this.lastFrameTime = 0;\n    this.zLayers = 100;\n    this.pageHidden = false;\n    this._sourceOptions = sourceOptions;\n    this._initialSourceOptions = sourceOptions;\n    this.retina = new Retina(this);\n    this.canvas = new Canvas(this);\n    this.particles = new Particles(this._engine, this);\n    this.pathGenerators = new Map();\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.plugins = new Map();\n    this.drawers = new Map();\n    this._options = loadContainerOptions(this._engine, this);\n    this.actualOptions = loadContainerOptions(this._engine, this);\n    this._eventListeners = new EventListeners(this);\n    if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n      this._intersectionObserver = new IntersectionObserver(entries => this._intersectionManager(entries));\n    }\n    this._engine.dispatchEvent(\"containerBuilt\", {\n      container: this\n    });\n  }\n  get options() {\n    return this._options;\n  }\n  get sourceOptions() {\n    return this._sourceOptions;\n  }\n  addClickHandler(callback) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const el = this.interactivity.element;\n    if (!el) {\n      return;\n    }\n    const clickOrTouchHandler = (e, pos, radius) => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      const pxRatio = this.retina.pixelRatio,\n        posRetina = {\n          x: pos.x * pxRatio,\n          y: pos.y * pxRatio\n        },\n        particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n      callback(e, particles);\n    };\n    const clickHandler = e => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      const mouseEvent = e,\n        pos = {\n          x: mouseEvent.offsetX || mouseEvent.clientX,\n          y: mouseEvent.offsetY || mouseEvent.clientY\n        };\n      clickOrTouchHandler(e, pos, 1);\n    };\n    const touchStartHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      touched = true;\n      touchMoved = false;\n    };\n    const touchMoveHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      touchMoved = true;\n    };\n    const touchEndHandler = e => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      if (touched && !touchMoved) {\n        const touchEvent = e;\n        let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n        if (!lastTouch) {\n          lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n          if (!lastTouch) {\n            return;\n          }\n        }\n        const element = this.canvas.element,\n          canvasRect = element ? element.getBoundingClientRect() : undefined,\n          pos = {\n            x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n            y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0)\n          };\n        clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n      }\n      touched = false;\n      touchMoved = false;\n    };\n    const touchCancelHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      touched = false;\n      touchMoved = false;\n    };\n    let touched = false,\n      touchMoved = false;\n    el.addEventListener(\"click\", clickHandler);\n    el.addEventListener(\"touchstart\", touchStartHandler);\n    el.addEventListener(\"touchmove\", touchMoveHandler);\n    el.addEventListener(\"touchend\", touchEndHandler);\n    el.addEventListener(\"touchcancel\", touchCancelHandler);\n  }\n  addLifeTime(value) {\n    this._lifeTime += value;\n  }\n  addPath(key, generator, override = false) {\n    if (!guardCheck(this) || !override && this.pathGenerators.has(key)) {\n      return false;\n    }\n    this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n    return true;\n  }\n  alive() {\n    return !this._duration || this._lifeTime <= this._duration;\n  }\n  destroy() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.stop();\n    this.particles.destroy();\n    this.canvas.destroy();\n    for (const [, drawer] of this.drawers) {\n      drawer.destroy && drawer.destroy(this);\n    }\n    for (const key of this.drawers.keys()) {\n      this.drawers.delete(key);\n    }\n    this._engine.plugins.destroy(this);\n    this.destroyed = true;\n    const mainArr = this._engine.dom(),\n      idx = mainArr.findIndex(t => t === this);\n    if (idx >= 0) {\n      mainArr.splice(idx, 1);\n    }\n    this._engine.dispatchEvent(\"containerDestroyed\", {\n      container: this\n    });\n  }\n  draw(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    let refreshTime = force;\n    this._drawAnimationFrame = requestAnimationFrame(async timestamp => {\n      if (refreshTime) {\n        this.lastFrameTime = undefined;\n        refreshTime = false;\n      }\n      await this._nextFrame(timestamp);\n    });\n  }\n  async export(type, options = {}) {\n    for (const [, plugin] of this.plugins) {\n      if (!plugin.export) {\n        continue;\n      }\n      const res = await plugin.export(type, options);\n      if (!res.supported) {\n        continue;\n      }\n      return res.blob;\n    }\n    getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n  }\n  getAnimationStatus() {\n    return !this._paused && !this.pageHidden && guardCheck(this);\n  }\n  handleClickMode(mode) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.particles.handleClickMode(mode);\n    for (const [, plugin] of this.plugins) {\n      plugin.handleClickMode && plugin.handleClickMode(mode);\n    }\n  }\n  async init() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const shapes = this._engine.plugins.getSupportedShapes();\n    for (const type of shapes) {\n      const drawer = this._engine.plugins.getShapeDrawer(type);\n      if (drawer) {\n        this.drawers.set(type, drawer);\n      }\n    }\n    this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n    const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n    for (const [id, plugin] of availablePlugins) {\n      this.plugins.set(id, plugin);\n    }\n    this.retina.init();\n    await this.canvas.init();\n    this.updateActualOptions();\n    this.canvas.initBackground();\n    this.canvas.resize();\n    this.zLayers = this.actualOptions.zLayers;\n    this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n    this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n    this._lifeTime = 0;\n    this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n    this.smooth = this.actualOptions.smooth;\n    for (const [, drawer] of this.drawers) {\n      drawer.init && (await drawer.init(this));\n    }\n    for (const [, plugin] of this.plugins) {\n      plugin.init && (await plugin.init());\n    }\n    this._engine.dispatchEvent(\"containerInit\", {\n      container: this\n    });\n    this.particles.init();\n    this.particles.setDensity();\n    for (const [, plugin] of this.plugins) {\n      plugin.particlesSetup && plugin.particlesSetup();\n    }\n    this._engine.dispatchEvent(\"particlesSetup\", {\n      container: this\n    });\n  }\n  async loadTheme(name) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this._currentTheme = name;\n    await this.refresh();\n  }\n  pause() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    if (this._drawAnimationFrame !== undefined) {\n      cancelAnimationFrame(this._drawAnimationFrame);\n      delete this._drawAnimationFrame;\n    }\n    if (this._paused) {\n      return;\n    }\n    for (const [, plugin] of this.plugins) {\n      plugin.pause && plugin.pause();\n    }\n    if (!this.pageHidden) {\n      this._paused = true;\n    }\n    this._engine.dispatchEvent(\"containerPaused\", {\n      container: this\n    });\n  }\n  play(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const needsUpdate = this._paused || force;\n    if (this._firstStart && !this.actualOptions.autoPlay) {\n      this._firstStart = false;\n      return;\n    }\n    if (this._paused) {\n      this._paused = false;\n    }\n    if (needsUpdate) {\n      for (const [, plugin] of this.plugins) {\n        if (plugin.play) {\n          plugin.play();\n        }\n      }\n    }\n    this._engine.dispatchEvent(\"containerPlay\", {\n      container: this\n    });\n    this.draw(needsUpdate || false);\n  }\n  async refresh() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.stop();\n    return this.start();\n  }\n  async reset() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this._initialSourceOptions = undefined;\n    this._options = loadContainerOptions(this._engine, this);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n    return this.refresh();\n  }\n  setNoise(noiseOrGenerator, init, update) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.setPath(noiseOrGenerator, init, update);\n  }\n  setPath(pathOrGenerator, init, update) {\n    if (!pathOrGenerator || !guardCheck(this)) {\n      return;\n    }\n    const pathGenerator = {\n      ...defaultPathGenerator\n    };\n    if (isFunction(pathOrGenerator)) {\n      pathGenerator.generate = pathOrGenerator;\n      if (init) {\n        pathGenerator.init = init;\n      }\n      if (update) {\n        pathGenerator.update = update;\n      }\n    } else {\n      const oldGenerator = pathGenerator;\n      pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n      pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n      pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n    }\n    this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n  }\n  async start() {\n    if (!guardCheck(this) || this.started) {\n      return;\n    }\n    await this.init();\n    this.started = true;\n    await new Promise(resolve => {\n      this._delayTimeout = setTimeout(async () => {\n        this._eventListeners.addListeners();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n          this._intersectionObserver.observe(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n          plugin.start && (await plugin.start());\n        }\n        this._engine.dispatchEvent(\"containerStarted\", {\n          container: this\n        });\n        this.play();\n        resolve();\n      }, this._delay);\n    });\n  }\n  stop() {\n    if (!guardCheck(this) || !this.started) {\n      return;\n    }\n    if (this._delayTimeout) {\n      clearTimeout(this._delayTimeout);\n      delete this._delayTimeout;\n    }\n    this._firstStart = true;\n    this.started = false;\n    this._eventListeners.removeListeners();\n    this.pause();\n    this.particles.clear();\n    this.canvas.stop();\n    if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n      this._intersectionObserver.unobserve(this.interactivity.element);\n    }\n    for (const [, plugin] of this.plugins) {\n      plugin.stop && plugin.stop();\n    }\n    for (const key of this.plugins.keys()) {\n      this.plugins.delete(key);\n    }\n    this._sourceOptions = this._options;\n    this._engine.dispatchEvent(\"containerStopped\", {\n      container: this\n    });\n  }\n  updateActualOptions() {\n    this.actualOptions.responsive = [];\n    const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n    this.actualOptions.setTheme(this._currentTheme);\n    if (this.responsiveMaxWidth === newMaxWidth) {\n      return false;\n    }\n    this.responsiveMaxWidth = newMaxWidth;\n    return true;\n  }\n}","map":{"version":3,"names":["getLogger","isFunction","Canvas","EventListeners","Options","Particles","Retina","errorPrefix","getRangeValue","loadOptions","guardCheck","container","destroyed","initDelta","value","fpsLimit","smooth","factor","loadContainerOptions","engine","sourceOptionsArr","options","defaultPathGeneratorKey","defaultPathGenerator","generate","p","velocity","init","update","reset","Container","constructor","id","sourceOptions","_intersectionManager","entries","actualOptions","pauseOnOutsideViewport","entry","target","interactivity","element","isIntersecting","play","pause","_nextFrame","timestamp","lastFrameTime","undefined","draw","delta","addLifeTime","particles","alive","destroy","getAnimationStatus","e","error","_engine","_delay","_duration","_lifeTime","_firstStart","started","_paused","zLayers","pageHidden","_sourceOptions","_initialSourceOptions","retina","canvas","pathGenerators","Map","mouse","clicking","inside","plugins","drawers","_options","_eventListeners","IntersectionObserver","_intersectionObserver","dispatchEvent","addClickHandler","callback","el","clickOrTouchHandler","pos","radius","pxRatio","pixelRatio","posRetina","x","y","quadTree","queryCircle","clickHandler","mouseEvent","offsetX","clientX","offsetY","clientY","touchStartHandler","touched","touchMoved","touchMoveHandler","touchEndHandler","touchEvent","lastTouch","touches","length","changedTouches","canvasRect","getBoundingClientRect","left","top","Math","max","radiusX","radiusY","touchCancelHandler","addEventListener","addPath","key","generator","override","has","set","stop","drawer","keys","delete","mainArr","dom","idx","findIndex","t","splice","force","refreshTime","_drawAnimationFrame","requestAnimationFrame","export","type","plugin","res","supported","blob","handleClickMode","mode","shapes","getSupportedShapes","getShapeDrawer","availablePlugins","getAvailablePlugins","updateActualOptions","initBackground","resize","duration","delay","setDensity","particlesSetup","loadTheme","name","_currentTheme","refresh","cancelAnimationFrame","needsUpdate","autoPlay","start","setNoise","noiseOrGenerator","setPath","pathOrGenerator","pathGenerator","oldGenerator","Promise","resolve","_delayTimeout","setTimeout","addListeners","HTMLElement","observe","clearTimeout","removeListeners","clear","unobserve","responsive","newMaxWidth","setResponsive","size","width","setTheme","responsiveMaxWidth"],"sources":["C:/Users/vinayak.sharma/OneDrive - Incedo Technology Solutions Ltd/Desktop/Project/node_modules/tsparticles-engine/esm/Core/Container.js"],"sourcesContent":["import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AACtD,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,UAAUA,CAACC,SAAS,EAAE;EAC3B,OAAOA,SAAS,IAAI,CAACA,SAAS,CAACC,SAAS;AAC5C;AACA,SAASC,SAASA,CAACC,KAAK,EAAEC,QAAQ,GAAG,EAAE,EAAEC,MAAM,GAAG,KAAK,EAAE;EACrD,OAAO;IACHF,KAAK;IACLG,MAAM,EAAED,MAAM,GAAG,EAAE,GAAGD,QAAQ,GAAI,EAAE,GAAGD,KAAK,GAAI;EACpD,CAAC;AACL;AACA,SAASI,oBAAoBA,CAACC,MAAM,EAAER,SAAS,EAAE,GAAGS,gBAAgB,EAAE;EAClE,MAAMC,OAAO,GAAG,IAAIjB,OAAO,CAACe,MAAM,EAAER,SAAS,CAAC;EAC9CF,WAAW,CAACY,OAAO,EAAE,GAAGD,gBAAgB,CAAC;EACzC,OAAOC,OAAO;AAClB;AACA,MAAMC,uBAAuB,GAAG,SAAS;EAAEC,oBAAoB,GAAG;IAC9DC,QAAQ,EAAGC,CAAC,IAAKA,CAAC,CAACC,QAAQ;IAC3BC,IAAI,EAAEA,CAAA,KAAM,CACZ,CAAC;IACDC,MAAM,EAAEA,CAAA,KAAM,CACd,CAAC;IACDC,KAAK,EAAEA,CAAA,KAAM,CACb;EACJ,CAAC;AACD,OAAO,MAAMC,SAAS,CAAC;EACnBC,WAAWA,CAACZ,MAAM,EAAEa,EAAE,EAAEC,aAAa,EAAE;IACnC,IAAI,CAACD,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACE,oBAAoB,GAAIC,OAAO,IAAK;MACrC,IAAI,CAACzB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC0B,aAAa,CAACC,sBAAsB,EAAE;QACjE;MACJ;MACA,KAAK,MAAMC,KAAK,IAAIH,OAAO,EAAE;QACzB,IAAIG,KAAK,CAACC,MAAM,KAAK,IAAI,CAACC,aAAa,CAACC,OAAO,EAAE;UAC7C;QACJ;QACA,CAACH,KAAK,CAACI,cAAc,GAAG,IAAI,CAACC,IAAI,GAAG,IAAI,CAACC,KAAK,EAAE,CAAC;MACrD;IACJ,CAAC;IACD,IAAI,CAACC,UAAU,GAAG,MAAOC,SAAS,IAAK;MACnC,IAAI;QACA,IAAI,CAAC,IAAI,CAAC9B,MAAM,IACZ,IAAI,CAAC+B,aAAa,KAAKC,SAAS,IAChCF,SAAS,GAAG,IAAI,CAACC,aAAa,GAAG,IAAI,GAAG,IAAI,CAAChC,QAAQ,EAAE;UACvD,IAAI,CAACkC,IAAI,CAAC,KAAK,CAAC;UAChB;QACJ;QACA,IAAI,CAACF,aAAa,KAAKD,SAAS;QAChC,MAAMI,KAAK,GAAGrC,SAAS,CAACiC,SAAS,GAAG,IAAI,CAACC,aAAa,EAAE,IAAI,CAAChC,QAAQ,EAAE,IAAI,CAACC,MAAM,CAAC;QACnF,IAAI,CAACmC,WAAW,CAACD,KAAK,CAACpC,KAAK,CAAC;QAC7B,IAAI,CAACiC,aAAa,GAAGD,SAAS;QAC9B,IAAII,KAAK,CAACpC,KAAK,GAAG,IAAI,EAAE;UACpB,IAAI,CAACmC,IAAI,CAAC,KAAK,CAAC;UAChB;QACJ;QACA,MAAM,IAAI,CAACG,SAAS,CAACH,IAAI,CAACC,KAAK,CAAC;QAChC,IAAI,CAAC,IAAI,CAACG,KAAK,CAAC,CAAC,EAAE;UACf,IAAI,CAACC,OAAO,CAAC,CAAC;UACd;QACJ;QACA,IAAI,IAAI,CAACC,kBAAkB,CAAC,CAAC,EAAE;UAC3B,IAAI,CAACN,IAAI,CAAC,KAAK,CAAC;QACpB;MACJ,CAAC,CACD,OAAOO,CAAC,EAAE;QACNxD,SAAS,CAAC,CAAC,CAACyD,KAAK,CAAE,GAAElD,WAAY,oBAAmB,EAAEiD,CAAC,CAAC;MAC5D;IACJ,CAAC;IACD,IAAI,CAACE,OAAO,GAAGvC,MAAM;IACrB,IAAI,CAACJ,QAAQ,GAAG,GAAG;IACnB,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB,IAAI,CAAC2C,MAAM,GAAG,CAAC;IACf,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACnD,SAAS,GAAG,KAAK;IACtB,IAAI,CAACoD,OAAO,GAAG,IAAI;IACnB,IAAI,CAACjB,aAAa,GAAG,CAAC;IACtB,IAAI,CAACkB,OAAO,GAAG,GAAG;IAClB,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,cAAc,GAAGlC,aAAa;IACnC,IAAI,CAACmC,qBAAqB,GAAGnC,aAAa;IAC1C,IAAI,CAACoC,MAAM,GAAG,IAAI/D,MAAM,CAAC,IAAI,CAAC;IAC9B,IAAI,CAACgE,MAAM,GAAG,IAAIpE,MAAM,CAAC,IAAI,CAAC;IAC9B,IAAI,CAACkD,SAAS,GAAG,IAAI/C,SAAS,CAAC,IAAI,CAACqD,OAAO,EAAE,IAAI,CAAC;IAClD,IAAI,CAACa,cAAc,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC/B,IAAI,CAAChC,aAAa,GAAG;MACjBiC,KAAK,EAAE;QACHC,QAAQ,EAAE,KAAK;QACfC,MAAM,EAAE;MACZ;IACJ,CAAC;IACD,IAAI,CAACC,OAAO,GAAG,IAAIJ,GAAG,CAAC,CAAC;IACxB,IAAI,CAACK,OAAO,GAAG,IAAIL,GAAG,CAAC,CAAC;IACxB,IAAI,CAACM,QAAQ,GAAG5D,oBAAoB,CAAC,IAAI,CAACwC,OAAO,EAAE,IAAI,CAAC;IACxD,IAAI,CAACtB,aAAa,GAAGlB,oBAAoB,CAAC,IAAI,CAACwC,OAAO,EAAE,IAAI,CAAC;IAC7D,IAAI,CAACqB,eAAe,GAAG,IAAI5E,cAAc,CAAC,IAAI,CAAC;IAC/C,IAAI,OAAO6E,oBAAoB,KAAK,WAAW,IAAIA,oBAAoB,EAAE;MACrE,IAAI,CAACC,qBAAqB,GAAG,IAAID,oBAAoB,CAAE7C,OAAO,IAAK,IAAI,CAACD,oBAAoB,CAACC,OAAO,CAAC,CAAC;IAC1G;IACA,IAAI,CAACuB,OAAO,CAACwB,aAAa,CAAC,gBAAgB,EAAE;MAAEvE,SAAS,EAAE;IAAK,CAAC,CAAC;EACrE;EACA,IAAIU,OAAOA,CAAA,EAAG;IACV,OAAO,IAAI,CAACyD,QAAQ;EACxB;EACA,IAAI7C,aAAaA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACkC,cAAc;EAC9B;EACAgB,eAAeA,CAACC,QAAQ,EAAE;IACtB,IAAI,CAAC1E,UAAU,CAAC,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,MAAM2E,EAAE,GAAG,IAAI,CAAC7C,aAAa,CAACC,OAAO;IACrC,IAAI,CAAC4C,EAAE,EAAE;MACL;IACJ;IACA,MAAMC,mBAAmB,GAAGA,CAAC9B,CAAC,EAAE+B,GAAG,EAAEC,MAAM,KAAK;MAC5C,IAAI,CAAC9E,UAAU,CAAC,IAAI,CAAC,EAAE;QACnB;MACJ;MACA,MAAM+E,OAAO,GAAG,IAAI,CAACpB,MAAM,CAACqB,UAAU;QAAEC,SAAS,GAAG;UAChDC,CAAC,EAAEL,GAAG,CAACK,CAAC,GAAGH,OAAO;UAClBI,CAAC,EAAEN,GAAG,CAACM,CAAC,GAAGJ;QACf,CAAC;QAAErC,SAAS,GAAG,IAAI,CAACA,SAAS,CAAC0C,QAAQ,CAACC,WAAW,CAACJ,SAAS,EAAEH,MAAM,GAAGC,OAAO,CAAC;MAC/EL,QAAQ,CAAC5B,CAAC,EAAEJ,SAAS,CAAC;IAC1B,CAAC;IACD,MAAM4C,YAAY,GAAIxC,CAAC,IAAK;MACxB,IAAI,CAAC9C,UAAU,CAAC,IAAI,CAAC,EAAE;QACnB;MACJ;MACA,MAAMuF,UAAU,GAAGzC,CAAC;QAAE+B,GAAG,GAAG;UACxBK,CAAC,EAAEK,UAAU,CAACC,OAAO,IAAID,UAAU,CAACE,OAAO;UAC3CN,CAAC,EAAEI,UAAU,CAACG,OAAO,IAAIH,UAAU,CAACI;QACxC,CAAC;MACDf,mBAAmB,CAAC9B,CAAC,EAAE+B,GAAG,EAAE,CAAC,CAAC;IAClC,CAAC;IACD,MAAMe,iBAAiB,GAAGA,CAAA,KAAM;MAC5B,IAAI,CAAC5F,UAAU,CAAC,IAAI,CAAC,EAAE;QACnB;MACJ;MACA6F,OAAO,GAAG,IAAI;MACdC,UAAU,GAAG,KAAK;IACtB,CAAC;IACD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;MAC3B,IAAI,CAAC/F,UAAU,CAAC,IAAI,CAAC,EAAE;QACnB;MACJ;MACA8F,UAAU,GAAG,IAAI;IACrB,CAAC;IACD,MAAME,eAAe,GAAIlD,CAAC,IAAK;MAC3B,IAAI,CAAC9C,UAAU,CAAC,IAAI,CAAC,EAAE;QACnB;MACJ;MACA,IAAI6F,OAAO,IAAI,CAACC,UAAU,EAAE;QACxB,MAAMG,UAAU,GAAGnD,CAAC;QACpB,IAAIoD,SAAS,GAAGD,UAAU,CAACE,OAAO,CAACF,UAAU,CAACE,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC;QACjE,IAAI,CAACF,SAAS,EAAE;UACZA,SAAS,GAAGD,UAAU,CAACI,cAAc,CAACJ,UAAU,CAACI,cAAc,CAACD,MAAM,GAAG,CAAC,CAAC;UAC3E,IAAI,CAACF,SAAS,EAAE;YACZ;UACJ;QACJ;QACA,MAAMnE,OAAO,GAAG,IAAI,CAAC6B,MAAM,CAAC7B,OAAO;UAAEuE,UAAU,GAAGvE,OAAO,GAAGA,OAAO,CAACwE,qBAAqB,CAAC,CAAC,GAAGjE,SAAS;UAAEuC,GAAG,GAAG;YAC3GK,CAAC,EAAEgB,SAAS,CAACT,OAAO,IAAIa,UAAU,GAAGA,UAAU,CAACE,IAAI,GAAG,CAAC,CAAC;YACzDrB,CAAC,EAAEe,SAAS,CAACP,OAAO,IAAIW,UAAU,GAAGA,UAAU,CAACG,GAAG,GAAG,CAAC;UAC3D,CAAC;QACD7B,mBAAmB,CAAC9B,CAAC,EAAE+B,GAAG,EAAE6B,IAAI,CAACC,GAAG,CAACT,SAAS,CAACU,OAAO,EAAEV,SAAS,CAACW,OAAO,CAAC,CAAC;MAC/E;MACAhB,OAAO,GAAG,KAAK;MACfC,UAAU,GAAG,KAAK;IACtB,CAAC;IACD,MAAMgB,kBAAkB,GAAGA,CAAA,KAAM;MAC7B,IAAI,CAAC9G,UAAU,CAAC,IAAI,CAAC,EAAE;QACnB;MACJ;MACA6F,OAAO,GAAG,KAAK;MACfC,UAAU,GAAG,KAAK;IACtB,CAAC;IACD,IAAID,OAAO,GAAG,KAAK;MAAEC,UAAU,GAAG,KAAK;IACvCnB,EAAE,CAACoC,gBAAgB,CAAC,OAAO,EAAEzB,YAAY,CAAC;IAC1CX,EAAE,CAACoC,gBAAgB,CAAC,YAAY,EAAEnB,iBAAiB,CAAC;IACpDjB,EAAE,CAACoC,gBAAgB,CAAC,WAAW,EAAEhB,gBAAgB,CAAC;IAClDpB,EAAE,CAACoC,gBAAgB,CAAC,UAAU,EAAEf,eAAe,CAAC;IAChDrB,EAAE,CAACoC,gBAAgB,CAAC,aAAa,EAAED,kBAAkB,CAAC;EAC1D;EACArE,WAAWA,CAACrC,KAAK,EAAE;IACf,IAAI,CAAC+C,SAAS,IAAI/C,KAAK;EAC3B;EACA4G,OAAOA,CAACC,GAAG,EAAEC,SAAS,EAAEC,QAAQ,GAAG,KAAK,EAAE;IACtC,IAAI,CAACnH,UAAU,CAAC,IAAI,CAAC,IAAK,CAACmH,QAAQ,IAAI,IAAI,CAACtD,cAAc,CAACuD,GAAG,CAACH,GAAG,CAAE,EAAE;MAClE,OAAO,KAAK;IAChB;IACA,IAAI,CAACpD,cAAc,CAACwD,GAAG,CAACJ,GAAG,EAAEC,SAAS,IAAIrG,oBAAoB,CAAC;IAC/D,OAAO,IAAI;EACf;EACA8B,KAAKA,CAAA,EAAG;IACJ,OAAO,CAAC,IAAI,CAACO,SAAS,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,CAACD,SAAS;EAC9D;EACAN,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC5C,UAAU,CAAC,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,IAAI,CAACsH,IAAI,CAAC,CAAC;IACX,IAAI,CAAC5E,SAAS,CAACE,OAAO,CAAC,CAAC;IACxB,IAAI,CAACgB,MAAM,CAAChB,OAAO,CAAC,CAAC;IACrB,KAAK,MAAM,GAAG2E,MAAM,CAAC,IAAI,IAAI,CAACpD,OAAO,EAAE;MACnCoD,MAAM,CAAC3E,OAAO,IAAI2E,MAAM,CAAC3E,OAAO,CAAC,IAAI,CAAC;IAC1C;IACA,KAAK,MAAMqE,GAAG,IAAI,IAAI,CAAC9C,OAAO,CAACqD,IAAI,CAAC,CAAC,EAAE;MACnC,IAAI,CAACrD,OAAO,CAACsD,MAAM,CAACR,GAAG,CAAC;IAC5B;IACA,IAAI,CAACjE,OAAO,CAACkB,OAAO,CAACtB,OAAO,CAAC,IAAI,CAAC;IAClC,IAAI,CAAC1C,SAAS,GAAG,IAAI;IACrB,MAAMwH,OAAO,GAAG,IAAI,CAAC1E,OAAO,CAAC2E,GAAG,CAAC,CAAC;MAAEC,GAAG,GAAGF,OAAO,CAACG,SAAS,CAAEC,CAAC,IAAKA,CAAC,KAAK,IAAI,CAAC;IAC9E,IAAIF,GAAG,IAAI,CAAC,EAAE;MACVF,OAAO,CAACK,MAAM,CAACH,GAAG,EAAE,CAAC,CAAC;IAC1B;IACA,IAAI,CAAC5E,OAAO,CAACwB,aAAa,CAAC,oBAAoB,EAAE;MAAEvE,SAAS,EAAE;IAAK,CAAC,CAAC;EACzE;EACAsC,IAAIA,CAACyF,KAAK,EAAE;IACR,IAAI,CAAChI,UAAU,CAAC,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,IAAIiI,WAAW,GAAGD,KAAK;IACvB,IAAI,CAACE,mBAAmB,GAAGC,qBAAqB,CAAC,MAAO/F,SAAS,IAAK;MAClE,IAAI6F,WAAW,EAAE;QACb,IAAI,CAAC5F,aAAa,GAAGC,SAAS;QAC9B2F,WAAW,GAAG,KAAK;MACvB;MACA,MAAM,IAAI,CAAC9F,UAAU,CAACC,SAAS,CAAC;IACpC,CAAC,CAAC;EACN;EACA,MAAMgG,MAAMA,CAACC,IAAI,EAAE1H,OAAO,GAAG,CAAC,CAAC,EAAE;IAC7B,KAAK,MAAM,GAAG2H,MAAM,CAAC,IAAI,IAAI,CAACpE,OAAO,EAAE;MACnC,IAAI,CAACoE,MAAM,CAACF,MAAM,EAAE;QAChB;MACJ;MACA,MAAMG,GAAG,GAAG,MAAMD,MAAM,CAACF,MAAM,CAACC,IAAI,EAAE1H,OAAO,CAAC;MAC9C,IAAI,CAAC4H,GAAG,CAACC,SAAS,EAAE;QAChB;MACJ;MACA,OAAOD,GAAG,CAACE,IAAI;IACnB;IACAnJ,SAAS,CAAC,CAAC,CAACyD,KAAK,CAAE,GAAElD,WAAY,8BAA6BwI,IAAK,YAAW,CAAC;EACnF;EACAxF,kBAAkBA,CAAA,EAAG;IACjB,OAAO,CAAC,IAAI,CAACS,OAAO,IAAI,CAAC,IAAI,CAACE,UAAU,IAAIxD,UAAU,CAAC,IAAI,CAAC;EAChE;EACA0I,eAAeA,CAACC,IAAI,EAAE;IAClB,IAAI,CAAC3I,UAAU,CAAC,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,IAAI,CAAC0C,SAAS,CAACgG,eAAe,CAACC,IAAI,CAAC;IACpC,KAAK,MAAM,GAAGL,MAAM,CAAC,IAAI,IAAI,CAACpE,OAAO,EAAE;MACnCoE,MAAM,CAACI,eAAe,IAAIJ,MAAM,CAACI,eAAe,CAACC,IAAI,CAAC;IAC1D;EACJ;EACA,MAAM1H,IAAIA,CAAA,EAAG;IACT,IAAI,CAACjB,UAAU,CAAC,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,MAAM4I,MAAM,GAAG,IAAI,CAAC5F,OAAO,CAACkB,OAAO,CAAC2E,kBAAkB,CAAC,CAAC;IACxD,KAAK,MAAMR,IAAI,IAAIO,MAAM,EAAE;MACvB,MAAMrB,MAAM,GAAG,IAAI,CAACvE,OAAO,CAACkB,OAAO,CAAC4E,cAAc,CAACT,IAAI,CAAC;MACxD,IAAId,MAAM,EAAE;QACR,IAAI,CAACpD,OAAO,CAACkD,GAAG,CAACgB,IAAI,EAAEd,MAAM,CAAC;MAClC;IACJ;IACA,IAAI,CAACnD,QAAQ,GAAG5D,oBAAoB,CAAC,IAAI,CAACwC,OAAO,EAAE,IAAI,EAAE,IAAI,CAACU,qBAAqB,EAAE,IAAI,CAACnC,aAAa,CAAC;IACxG,IAAI,CAACG,aAAa,GAAGlB,oBAAoB,CAAC,IAAI,CAACwC,OAAO,EAAE,IAAI,EAAE,IAAI,CAACoB,QAAQ,CAAC;IAC5E,MAAM2E,gBAAgB,GAAG,IAAI,CAAC/F,OAAO,CAACkB,OAAO,CAAC8E,mBAAmB,CAAC,IAAI,CAAC;IACvE,KAAK,MAAM,CAAC1H,EAAE,EAAEgH,MAAM,CAAC,IAAIS,gBAAgB,EAAE;MACzC,IAAI,CAAC7E,OAAO,CAACmD,GAAG,CAAC/F,EAAE,EAAEgH,MAAM,CAAC;IAChC;IACA,IAAI,CAAC3E,MAAM,CAAC1C,IAAI,CAAC,CAAC;IAClB,MAAM,IAAI,CAAC2C,MAAM,CAAC3C,IAAI,CAAC,CAAC;IACxB,IAAI,CAACgI,mBAAmB,CAAC,CAAC;IAC1B,IAAI,CAACrF,MAAM,CAACsF,cAAc,CAAC,CAAC;IAC5B,IAAI,CAACtF,MAAM,CAACuF,MAAM,CAAC,CAAC;IACpB,IAAI,CAAC5F,OAAO,GAAG,IAAI,CAAC7B,aAAa,CAAC6B,OAAO;IACzC,IAAI,CAACL,SAAS,GAAGpD,aAAa,CAAC,IAAI,CAAC4B,aAAa,CAAC0H,QAAQ,CAAC,GAAG,IAAI;IAClE,IAAI,CAACnG,MAAM,GAAGnD,aAAa,CAAC,IAAI,CAAC4B,aAAa,CAAC2H,KAAK,CAAC,GAAG,IAAI;IAC5D,IAAI,CAAClG,SAAS,GAAG,CAAC;IAClB,IAAI,CAAC9C,QAAQ,GAAG,IAAI,CAACqB,aAAa,CAACrB,QAAQ,GAAG,CAAC,GAAG,IAAI,CAACqB,aAAa,CAACrB,QAAQ,GAAG,GAAG;IACnF,IAAI,CAACC,MAAM,GAAG,IAAI,CAACoB,aAAa,CAACpB,MAAM;IACvC,KAAK,MAAM,GAAGiH,MAAM,CAAC,IAAI,IAAI,CAACpD,OAAO,EAAE;MACnCoD,MAAM,CAACtG,IAAI,KAAK,MAAMsG,MAAM,CAACtG,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5C;IACA,KAAK,MAAM,GAAGqH,MAAM,CAAC,IAAI,IAAI,CAACpE,OAAO,EAAE;MACnCoE,MAAM,CAACrH,IAAI,KAAK,MAAMqH,MAAM,CAACrH,IAAI,CAAC,CAAC,CAAC;IACxC;IACA,IAAI,CAAC+B,OAAO,CAACwB,aAAa,CAAC,eAAe,EAAE;MAAEvE,SAAS,EAAE;IAAK,CAAC,CAAC;IAChE,IAAI,CAACyC,SAAS,CAACzB,IAAI,CAAC,CAAC;IACrB,IAAI,CAACyB,SAAS,CAAC4G,UAAU,CAAC,CAAC;IAC3B,KAAK,MAAM,GAAGhB,MAAM,CAAC,IAAI,IAAI,CAACpE,OAAO,EAAE;MACnCoE,MAAM,CAACiB,cAAc,IAAIjB,MAAM,CAACiB,cAAc,CAAC,CAAC;IACpD;IACA,IAAI,CAACvG,OAAO,CAACwB,aAAa,CAAC,gBAAgB,EAAE;MAAEvE,SAAS,EAAE;IAAK,CAAC,CAAC;EACrE;EACA,MAAMuJ,SAASA,CAACC,IAAI,EAAE;IAClB,IAAI,CAACzJ,UAAU,CAAC,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,IAAI,CAAC0J,aAAa,GAAGD,IAAI;IACzB,MAAM,IAAI,CAACE,OAAO,CAAC,CAAC;EACxB;EACAzH,KAAKA,CAAA,EAAG;IACJ,IAAI,CAAClC,UAAU,CAAC,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,IAAI,IAAI,CAACkI,mBAAmB,KAAK5F,SAAS,EAAE;MACxCsH,oBAAoB,CAAC,IAAI,CAAC1B,mBAAmB,CAAC;MAC9C,OAAO,IAAI,CAACA,mBAAmB;IACnC;IACA,IAAI,IAAI,CAAC5E,OAAO,EAAE;MACd;IACJ;IACA,KAAK,MAAM,GAAGgF,MAAM,CAAC,IAAI,IAAI,CAACpE,OAAO,EAAE;MACnCoE,MAAM,CAACpG,KAAK,IAAIoG,MAAM,CAACpG,KAAK,CAAC,CAAC;IAClC;IACA,IAAI,CAAC,IAAI,CAACsB,UAAU,EAAE;MAClB,IAAI,CAACF,OAAO,GAAG,IAAI;IACvB;IACA,IAAI,CAACN,OAAO,CAACwB,aAAa,CAAC,iBAAiB,EAAE;MAAEvE,SAAS,EAAE;IAAK,CAAC,CAAC;EACtE;EACAgC,IAAIA,CAAC+F,KAAK,EAAE;IACR,IAAI,CAAChI,UAAU,CAAC,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,MAAM6J,WAAW,GAAG,IAAI,CAACvG,OAAO,IAAI0E,KAAK;IACzC,IAAI,IAAI,CAAC5E,WAAW,IAAI,CAAC,IAAI,CAAC1B,aAAa,CAACoI,QAAQ,EAAE;MAClD,IAAI,CAAC1G,WAAW,GAAG,KAAK;MACxB;IACJ;IACA,IAAI,IAAI,CAACE,OAAO,EAAE;MACd,IAAI,CAACA,OAAO,GAAG,KAAK;IACxB;IACA,IAAIuG,WAAW,EAAE;MACb,KAAK,MAAM,GAAGvB,MAAM,CAAC,IAAI,IAAI,CAACpE,OAAO,EAAE;QACnC,IAAIoE,MAAM,CAACrG,IAAI,EAAE;UACbqG,MAAM,CAACrG,IAAI,CAAC,CAAC;QACjB;MACJ;IACJ;IACA,IAAI,CAACe,OAAO,CAACwB,aAAa,CAAC,eAAe,EAAE;MAAEvE,SAAS,EAAE;IAAK,CAAC,CAAC;IAChE,IAAI,CAACsC,IAAI,CAACsH,WAAW,IAAI,KAAK,CAAC;EACnC;EACA,MAAMF,OAAOA,CAAA,EAAG;IACZ,IAAI,CAAC3J,UAAU,CAAC,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,IAAI,CAACsH,IAAI,CAAC,CAAC;IACX,OAAO,IAAI,CAACyC,KAAK,CAAC,CAAC;EACvB;EACA,MAAM5I,KAAKA,CAAA,EAAG;IACV,IAAI,CAACnB,UAAU,CAAC,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,IAAI,CAAC0D,qBAAqB,GAAGpB,SAAS;IACtC,IAAI,CAAC8B,QAAQ,GAAG5D,oBAAoB,CAAC,IAAI,CAACwC,OAAO,EAAE,IAAI,CAAC;IACxD,IAAI,CAACtB,aAAa,GAAGlB,oBAAoB,CAAC,IAAI,CAACwC,OAAO,EAAE,IAAI,EAAE,IAAI,CAACoB,QAAQ,CAAC;IAC5E,OAAO,IAAI,CAACuF,OAAO,CAAC,CAAC;EACzB;EACAK,QAAQA,CAACC,gBAAgB,EAAEhJ,IAAI,EAAEC,MAAM,EAAE;IACrC,IAAI,CAAClB,UAAU,CAAC,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,IAAI,CAACkK,OAAO,CAACD,gBAAgB,EAAEhJ,IAAI,EAAEC,MAAM,CAAC;EAChD;EACAgJ,OAAOA,CAACC,eAAe,EAAElJ,IAAI,EAAEC,MAAM,EAAE;IACnC,IAAI,CAACiJ,eAAe,IAAI,CAACnK,UAAU,CAAC,IAAI,CAAC,EAAE;MACvC;IACJ;IACA,MAAMoK,aAAa,GAAG;MAAE,GAAGvJ;IAAqB,CAAC;IACjD,IAAItB,UAAU,CAAC4K,eAAe,CAAC,EAAE;MAC7BC,aAAa,CAACtJ,QAAQ,GAAGqJ,eAAe;MACxC,IAAIlJ,IAAI,EAAE;QACNmJ,aAAa,CAACnJ,IAAI,GAAGA,IAAI;MAC7B;MACA,IAAIC,MAAM,EAAE;QACRkJ,aAAa,CAAClJ,MAAM,GAAGA,MAAM;MACjC;IACJ,CAAC,MACI;MACD,MAAMmJ,YAAY,GAAGD,aAAa;MAClCA,aAAa,CAACtJ,QAAQ,GAAGqJ,eAAe,CAACrJ,QAAQ,IAAIuJ,YAAY,CAACvJ,QAAQ;MAC1EsJ,aAAa,CAACnJ,IAAI,GAAGkJ,eAAe,CAAClJ,IAAI,IAAIoJ,YAAY,CAACpJ,IAAI;MAC9DmJ,aAAa,CAAClJ,MAAM,GAAGiJ,eAAe,CAACjJ,MAAM,IAAImJ,YAAY,CAACnJ,MAAM;IACxE;IACA,IAAI,CAAC8F,OAAO,CAACpG,uBAAuB,EAAEwJ,aAAa,EAAE,IAAI,CAAC;EAC9D;EACA,MAAML,KAAKA,CAAA,EAAG;IACV,IAAI,CAAC/J,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI,CAACqD,OAAO,EAAE;MACnC;IACJ;IACA,MAAM,IAAI,CAACpC,IAAI,CAAC,CAAC;IACjB,IAAI,CAACoC,OAAO,GAAG,IAAI;IACnB,MAAM,IAAIiH,OAAO,CAAEC,OAAO,IAAK;MAC3B,IAAI,CAACC,aAAa,GAAGC,UAAU,CAAC,YAAY;QACxC,IAAI,CAACpG,eAAe,CAACqG,YAAY,CAAC,CAAC;QACnC,IAAI,IAAI,CAAC5I,aAAa,CAACC,OAAO,YAAY4I,WAAW,IAAI,IAAI,CAACpG,qBAAqB,EAAE;UACjF,IAAI,CAACA,qBAAqB,CAACqG,OAAO,CAAC,IAAI,CAAC9I,aAAa,CAACC,OAAO,CAAC;QAClE;QACA,KAAK,MAAM,GAAGuG,MAAM,CAAC,IAAI,IAAI,CAACpE,OAAO,EAAE;UACnCoE,MAAM,CAACyB,KAAK,KAAK,MAAMzB,MAAM,CAACyB,KAAK,CAAC,CAAC,CAAC;QAC1C;QACA,IAAI,CAAC/G,OAAO,CAACwB,aAAa,CAAC,kBAAkB,EAAE;UAAEvE,SAAS,EAAE;QAAK,CAAC,CAAC;QACnE,IAAI,CAACgC,IAAI,CAAC,CAAC;QACXsI,OAAO,CAAC,CAAC;MACb,CAAC,EAAE,IAAI,CAACtH,MAAM,CAAC;IACnB,CAAC,CAAC;EACN;EACAqE,IAAIA,CAAA,EAAG;IACH,IAAI,CAACtH,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAACqD,OAAO,EAAE;MACpC;IACJ;IACA,IAAI,IAAI,CAACmH,aAAa,EAAE;MACpBK,YAAY,CAAC,IAAI,CAACL,aAAa,CAAC;MAChC,OAAO,IAAI,CAACA,aAAa;IAC7B;IACA,IAAI,CAACpH,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACgB,eAAe,CAACyG,eAAe,CAAC,CAAC;IACtC,IAAI,CAAC5I,KAAK,CAAC,CAAC;IACZ,IAAI,CAACQ,SAAS,CAACqI,KAAK,CAAC,CAAC;IACtB,IAAI,CAACnH,MAAM,CAAC0D,IAAI,CAAC,CAAC;IAClB,IAAI,IAAI,CAACxF,aAAa,CAACC,OAAO,YAAY4I,WAAW,IAAI,IAAI,CAACpG,qBAAqB,EAAE;MACjF,IAAI,CAACA,qBAAqB,CAACyG,SAAS,CAAC,IAAI,CAAClJ,aAAa,CAACC,OAAO,CAAC;IACpE;IACA,KAAK,MAAM,GAAGuG,MAAM,CAAC,IAAI,IAAI,CAACpE,OAAO,EAAE;MACnCoE,MAAM,CAAChB,IAAI,IAAIgB,MAAM,CAAChB,IAAI,CAAC,CAAC;IAChC;IACA,KAAK,MAAML,GAAG,IAAI,IAAI,CAAC/C,OAAO,CAACsD,IAAI,CAAC,CAAC,EAAE;MACnC,IAAI,CAACtD,OAAO,CAACuD,MAAM,CAACR,GAAG,CAAC;IAC5B;IACA,IAAI,CAACxD,cAAc,GAAG,IAAI,CAACW,QAAQ;IACnC,IAAI,CAACpB,OAAO,CAACwB,aAAa,CAAC,kBAAkB,EAAE;MAAEvE,SAAS,EAAE;IAAK,CAAC,CAAC;EACvE;EACAgJ,mBAAmBA,CAAA,EAAG;IAClB,IAAI,CAACvH,aAAa,CAACuJ,UAAU,GAAG,EAAE;IAClC,MAAMC,WAAW,GAAG,IAAI,CAACxJ,aAAa,CAACyJ,aAAa,CAAC,IAAI,CAACvH,MAAM,CAACwH,IAAI,CAACC,KAAK,EAAE,IAAI,CAAC1H,MAAM,CAACqB,UAAU,EAAE,IAAI,CAACZ,QAAQ,CAAC;IACnH,IAAI,CAAC1C,aAAa,CAAC4J,QAAQ,CAAC,IAAI,CAAC5B,aAAa,CAAC;IAC/C,IAAI,IAAI,CAAC6B,kBAAkB,KAAKL,WAAW,EAAE;MACzC,OAAO,KAAK;IAChB;IACA,IAAI,CAACK,kBAAkB,GAAGL,WAAW;IACrC,OAAO,IAAI;EACf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}