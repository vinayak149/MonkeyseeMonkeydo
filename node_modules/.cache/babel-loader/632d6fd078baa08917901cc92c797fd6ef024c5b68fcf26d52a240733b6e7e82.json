{"ast":null,"code":"import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n  let res = map.get(container);\n  if (!res || force) {\n    res = [...initializers.values()].map(t => t(container));\n    map.set(container, res);\n  }\n  return res;\n}\nexport class Plugins {\n  constructor(engine) {\n    this._engine = engine;\n    this.plugins = [];\n    this._initializers = {\n      interactors: new Map(),\n      movers: new Map(),\n      updaters: new Map()\n    };\n    this.interactors = new Map();\n    this.movers = new Map();\n    this.updaters = new Map();\n    this.presets = new Map();\n    this.drawers = new Map();\n    this.pathGenerators = new Map();\n  }\n  addInteractor(name, initInteractor) {\n    this._initializers.interactors.set(name, initInteractor);\n  }\n  addParticleMover(name, initMover) {\n    this._initializers.movers.set(name, initMover);\n  }\n  addParticleUpdater(name, initUpdater) {\n    this._initializers.updaters.set(name, initUpdater);\n  }\n  addPathGenerator(type, pathGenerator) {\n    !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n  }\n  addPlugin(plugin) {\n    !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n  }\n  addPreset(presetKey, options, override = false) {\n    (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n  }\n  addShapeDrawer(types, drawer) {\n    executeOnSingleOrMultiple(types, type => {\n      !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n    });\n  }\n  destroy(container) {\n    this.updaters.delete(container);\n    this.movers.delete(container);\n    this.interactors.delete(container);\n  }\n  getAvailablePlugins(container) {\n    const res = new Map();\n    for (const plugin of this.plugins) {\n      plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n    }\n    return res;\n  }\n  getInteractors(container, force = false) {\n    return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n  }\n  getMovers(container, force = false) {\n    return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n  }\n  getPathGenerator(type) {\n    return this.pathGenerators.get(type);\n  }\n  getPlugin(plugin) {\n    return this.plugins.find(t => t.id === plugin);\n  }\n  getPreset(preset) {\n    return this.presets.get(preset);\n  }\n  getShapeDrawer(type) {\n    return this.drawers.get(type);\n  }\n  getSupportedShapes() {\n    return this.drawers.keys();\n  }\n  getUpdaters(container, force = false) {\n    return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n  }\n  loadOptions(options, sourceOptions) {\n    for (const plugin of this.plugins) {\n      plugin.loadOptions(options, sourceOptions);\n    }\n  }\n  loadParticlesOptions(container, options, ...sourceOptions) {\n    const updaters = this.updaters.get(container);\n    if (!updaters) {\n      return;\n    }\n    for (const updater of updaters) {\n      updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n    }\n  }\n}","map":{"version":3,"names":["executeOnSingleOrMultiple","getItemsFromInitializer","container","map","initializers","force","res","get","values","t","set","Plugins","constructor","engine","_engine","plugins","_initializers","interactors","Map","movers","updaters","presets","drawers","pathGenerators","addInteractor","name","initInteractor","addParticleMover","initMover","addParticleUpdater","initUpdater","addPathGenerator","type","pathGenerator","getPathGenerator","addPlugin","plugin","getPlugin","id","push","addPreset","presetKey","options","override","getPreset","addShapeDrawer","types","drawer","getShapeDrawer","destroy","delete","getAvailablePlugins","needsPlugin","actualOptions","getInteractors","getMovers","find","preset","getSupportedShapes","keys","getUpdaters","loadOptions","sourceOptions","loadParticlesOptions","updater"],"sources":["C:/Users/vinayak.sharma/OneDrive - Incedo Technology Solutions Ltd/Desktop/Project/node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js"],"sourcesContent":["import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}