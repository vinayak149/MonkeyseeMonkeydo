{"ast":null,"code":"import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n  if (engine.loadImage) {\n    return;\n  }\n  engine.loadImage = async data => {\n    if (!data.name && !data.src) {\n      throw new Error(`${errorPrefix} no image source provided`);\n    }\n    if (!engine.images) {\n      engine.images = [];\n    }\n    if (engine.images.find(t => t.name === data.name || t.source === data.src)) {\n      return;\n    }\n    try {\n      const image = {\n        gif: data.gif ?? false,\n        name: data.name ?? data.src,\n        source: data.src,\n        type: data.src.substring(data.src.length - 3),\n        error: false,\n        loading: true,\n        replaceColor: data.replaceColor,\n        ratio: data.width && data.height ? data.width / data.height : undefined\n      };\n      engine.images.push(image);\n      const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n      await imageFunc(image);\n    } catch {\n      throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n    }\n  };\n}\nexport async function loadImageShape(engine, refresh = true) {\n  addLoadImageToEngine(engine);\n  const preloader = new ImagePreloaderPlugin(engine);\n  await engine.addPlugin(preloader, refresh);\n  await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}","map":{"version":3,"names":["downloadSvgImage","loadGifImage","loadImage","ImageDrawer","ImagePreloaderPlugin","errorPrefix","addLoadImageToEngine","engine","data","name","src","Error","images","find","t","source","image","gif","type","substring","length","error","loading","replaceColor","ratio","width","height","undefined","push","imageFunc","loadImageShape","refresh","preloader","addPlugin","addShape"],"sources":["C:/Users/vinayak.sharma/OneDrive - Incedo Technology Solutions Ltd/Desktop/Project/node_modules/tsparticles-shape-image/esm/index.js"],"sourcesContent":["import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - 3),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,YAAY,EAAEC,SAAS,QAAQ,SAAS;AACnE,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,oBAAoB,QAAQ,kBAAkB;AACvD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,oBAAoBA,CAACC,MAAM,EAAE;EAClC,IAAIA,MAAM,CAACL,SAAS,EAAE;IAClB;EACJ;EACAK,MAAM,CAACL,SAAS,GAAG,MAAOM,IAAI,IAAK;IAC/B,IAAI,CAACA,IAAI,CAACC,IAAI,IAAI,CAACD,IAAI,CAACE,GAAG,EAAE;MACzB,MAAM,IAAIC,KAAK,CAAE,GAAEN,WAAY,2BAA0B,CAAC;IAC9D;IACA,IAAI,CAACE,MAAM,CAACK,MAAM,EAAE;MAChBL,MAAM,CAACK,MAAM,GAAG,EAAE;IACtB;IACA,IAAIL,MAAM,CAACK,MAAM,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACL,IAAI,KAAKD,IAAI,CAACC,IAAI,IAAIK,CAAC,CAACC,MAAM,KAAKP,IAAI,CAACE,GAAG,CAAC,EAAE;MAC1E;IACJ;IACA,IAAI;MACA,MAAMM,KAAK,GAAG;QACVC,GAAG,EAAET,IAAI,CAACS,GAAG,IAAI,KAAK;QACtBR,IAAI,EAAED,IAAI,CAACC,IAAI,IAAID,IAAI,CAACE,GAAG;QAC3BK,MAAM,EAAEP,IAAI,CAACE,GAAG;QAChBQ,IAAI,EAAEV,IAAI,CAACE,GAAG,CAACS,SAAS,CAACX,IAAI,CAACE,GAAG,CAACU,MAAM,GAAG,CAAC,CAAC;QAC7CC,KAAK,EAAE,KAAK;QACZC,OAAO,EAAE,IAAI;QACbC,YAAY,EAAEf,IAAI,CAACe,YAAY;QAC/BC,KAAK,EAAEhB,IAAI,CAACiB,KAAK,IAAIjB,IAAI,CAACkB,MAAM,GAAGlB,IAAI,CAACiB,KAAK,GAAGjB,IAAI,CAACkB,MAAM,GAAGC;MAClE,CAAC;MACDpB,MAAM,CAACK,MAAM,CAACgB,IAAI,CAACZ,KAAK,CAAC;MACzB,MAAMa,SAAS,GAAGrB,IAAI,CAACS,GAAG,GAAGhB,YAAY,GAAGO,IAAI,CAACe,YAAY,GAAGvB,gBAAgB,GAAGE,SAAS;MAC5F,MAAM2B,SAAS,CAACb,KAAK,CAAC;IAC1B,CAAC,CACD,MAAM;MACF,MAAM,IAAIL,KAAK,CAAE,GAAEN,WAAY,IAAGG,IAAI,CAACC,IAAI,IAAID,IAAI,CAACE,GAAI,YAAW,CAAC;IACxE;EACJ,CAAC;AACL;AACA,OAAO,eAAeoB,cAAcA,CAACvB,MAAM,EAAEwB,OAAO,GAAG,IAAI,EAAE;EACzDzB,oBAAoB,CAACC,MAAM,CAAC;EAC5B,MAAMyB,SAAS,GAAG,IAAI5B,oBAAoB,CAACG,MAAM,CAAC;EAClD,MAAMA,MAAM,CAAC0B,SAAS,CAACD,SAAS,EAAED,OAAO,CAAC;EAC1C,MAAMxB,MAAM,CAAC2B,QAAQ,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,IAAI/B,WAAW,CAACI,MAAM,CAAC,EAAEwB,OAAO,CAAC;AAChF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}