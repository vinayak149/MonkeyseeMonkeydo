{"ast":null,"code":"import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n    this._processBounce = (position, radius, area) => {\n      const query = this.container.particles.quadTree.query(area, p => this.isEnabled(p));\n      for (const particle of query) {\n        if (area instanceof Circle) {\n          circleBounce(circleBounceDataFromParticle(particle), {\n            position,\n            radius,\n            mass: radius ** 2 * Math.PI / 2,\n            velocity: Vector.origin,\n            factor: Vector.origin\n          });\n        } else if (area instanceof Rectangle) {\n          rectBounce(particle, calculateBounds(position, radius));\n        }\n      }\n    };\n    this._processMouseBounce = () => {\n      const container = this.container,\n        pxRatio = container.retina.pixelRatio,\n        tolerance = 10 * pxRatio,\n        mousePos = container.interactivity.mouse.position,\n        radius = container.retina.bounceModeDistance;\n      if (!radius || radius < 0 || !mousePos) {\n        return;\n      }\n      this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n    };\n    this._singleSelectorBounce = (selector, div) => {\n      const container = this.container,\n        query = document.querySelectorAll(selector);\n      if (!query.length) {\n        return;\n      }\n      query.forEach(item => {\n        const elem = item,\n          pxRatio = container.retina.pixelRatio,\n          pos = {\n            x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n          },\n          radius = elem.offsetWidth / 2 * pxRatio,\n          tolerance = 10 * pxRatio,\n          area = div.type === \"circle\" ? new Circle(pos.x, pos.y, radius + tolerance) : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n        this._processBounce(pos, radius, area);\n      });\n    };\n  }\n  clear() {}\n  init() {\n    const container = this.container,\n      bounce = container.actualOptions.interactivity.modes.bounce;\n    if (!bounce) {\n      return;\n    }\n    container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n  }\n  async interact() {\n    const container = this.container,\n      options = container.actualOptions,\n      events = options.interactivity.events,\n      mouseMoveStatus = container.interactivity.status === mouseMoveEvent,\n      hoverEnabled = events.onHover.enable,\n      hoverMode = events.onHover.mode,\n      divs = events.onDiv;\n    if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n      this._processMouseBounce();\n    } else {\n      divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n    }\n  }\n  isEnabled(particle) {\n    const container = this.container,\n      options = container.actualOptions,\n      mouse = container.interactivity.mouse,\n      events = (particle?.interactivity ?? options.interactivity).events,\n      divs = events.onDiv;\n    return mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode) || isDivModeEnabled(\"bounce\", divs);\n  }\n  loadModeOptions(options, ...sources) {\n    if (!options.bounce) {\n      options.bounce = new Bounce();\n    }\n    for (const source of sources) {\n      options.bounce.load(source?.bounce);\n    }\n  }\n  reset() {}\n}","map":{"version":3,"names":["Circle","ExternalInteractorBase","Rectangle","Vector","calculateBounds","circleBounce","circleBounceDataFromParticle","divModeExecute","isDivModeEnabled","isInArray","mouseMoveEvent","rectBounce","Bounce","Bouncer","constructor","container","_processBounce","position","radius","area","query","particles","quadTree","p","isEnabled","particle","mass","Math","PI","velocity","origin","factor","_processMouseBounce","pxRatio","retina","pixelRatio","tolerance","mousePos","interactivity","mouse","bounceModeDistance","x","y","_singleSelectorBounce","selector","div","document","querySelectorAll","length","forEach","item","elem","pos","offsetLeft","offsetWidth","offsetTop","offsetHeight","type","clear","init","bounce","actualOptions","modes","distance","interact","options","events","mouseMoveStatus","status","hoverEnabled","onHover","enable","hoverMode","mode","divs","onDiv","loadModeOptions","sources","source","load","reset"],"sources":["C:/Users/vinayak.sharma/OneDrive - Incedo Technology Solutions Ltd/Desktop/Project/node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js"],"sourcesContent":["import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._processBounce = (position, radius, area) => {\n            const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (area instanceof Circle) {\n                    circleBounce(circleBounceDataFromParticle(particle), {\n                        position,\n                        radius,\n                        mass: (radius ** 2 * Math.PI) / 2,\n                        velocity: Vector.origin,\n                        factor: Vector.origin,\n                    });\n                }\n                else if (area instanceof Rectangle) {\n                    rectBounce(particle, calculateBounds(position, radius));\n                }\n            }\n        };\n        this._processMouseBounce = () => {\n            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n            if (!radius || radius < 0 || !mousePos) {\n                return;\n            }\n            this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n        };\n        this._singleSelectorBounce = (selector, div) => {\n            const container = this.container, query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, radius + tolerance)\n                    : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n                this._processBounce(pos, radius, area);\n            });\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this._processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}